[package]
name = "rio-rs"
version = "0.3.3-alpha.1"
edition = "2021"
license-file = "../LICENSE"
repository = "https://github.com/rcelha/rio-rs"
description = "Distributed stateful service framework"
rust-version = "1.83"

[features]
default = ["redis", "sqlite", "postgres", "local"]
sqlite = ["sql", "sqlx/sqlite"]
postgres = ["sql", "sqlx/postgres"]
sql = ["dep:sqlx"]
redis = ["dep:redis", "dep:bb8-redis"]
local = []
http = ["dep:axum", "dep:reqwest"]
full = ["redis", "sqlite", "postgres", "local", "http"]

[dependencies]
async-recursion = "0.3.2" # Client::send needs recursion (for now)
async-stream = "0.3.5"
async-trait = { package = "async-trait-sync", version = "0.1.36" }
axum = { version = "0.7.5", optional = true }
bb8 = "0.7.1" # Client Pool
bb8-redis = { version = "0.17.0", optional = true }
bincode = "1.3.3"
chrono = "0.4.19" # Date types for SQLx
dashmap = "5.4.0"
derive_builder = "0.20.0"
env_logger = "0.11.5"
futures = "0.3.0" # Need for futures::SyncExt (Framed.send)
log = { version = "0.4.22", features = ["kv"] }
lru = "0.7.7" # Store ServiceObject's placements locally
netwatch = "0.4.0"
papaya = "0.1.4"
rand = "0.8"
redis = { version = "0.27.5", optional = true }
reqwest = { version = "0.12.12", optional = true, features = ["json"] }
rio-macros = { path = "../rio-macros", version = "0.3.3-alpha.1" }
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = "1.0"
sqlx = { version = "0.8", optional = true, features = [
    "runtime-tokio",
    "tls-native-tls",
    "sqlite",
    "postgres",
    "chrono",
] }
state = "0.5.2" # AppData/context
sync_wrapper = "1.0.1"
thiserror = "1.0"
tokio = { version = "1", features = ["full"] }
tokio-stream = { version = "0.1.8", features = ["sync"] }
tokio-util = { version = "0.6", features = ["full"] }
tower = { version = "0.4.12", features = ["full"] }

[dev-dependencies]
lazy_static = "1.4.0"
