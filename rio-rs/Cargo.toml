[package]
name = "rio-rs"
version = "0.2.1"
edition = "2021"
license-file = "../LICENSE"
repository = "https://github.com/rcelha/rio-rs"
description = "Distributed stateful service framework"
rust-version = "1.83"

[features]
default = ["redis", "sqlite", "postgres", "local"]
sqlite = ["dep:sqlx", "sql"]
postgres = ["dep:sqlx", "sql"]
sql = ["dep:sqlx"]
redis = ["dep:redis", "dep:bb8-redis"]
local = []

[dependencies]
async-trait = { package = "async-trait-sync", version = "0.1.36" }
bincode = "1.3.3"
dashmap = "5.4.0"
rand = "0.8"
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = "1.0"
thiserror = "1.0"
tokio = { version = "1", features = ["full"] }
tokio-stream = { version = "0.1.8", features = ["sync"] }
tokio-util = { version = "0.6", features = ["full"] }
rio-macros = { path = "../rio-macros", version = "0.2.1" }
tower = { version = "0.4.12", features = ["full"] }

# Need for futures::SyncExt (Framed.send)
futures = "0.3.0"

# Date types for SQLx
chrono = "0.4.19"

# Store ServiceObject's placements locally
lru = "0.7.7"

# Client::send needs recursion (for now)
async-recursion = "0.3.2"

# AppData
state = "0.5.2"

# Client Pool
bb8 = "0.7.1"

# DB
sqlx = { version = "0.8", optional = true, features = [
    "runtime-tokio",
    "tls-native-tls",
    "sqlite",
    "postgres",
    "chrono",
] }
async-stream = "0.3.5"
derive_builder = "0.20.0"
sync_wrapper = "1.0.1"
env_logger = "0.11.5"
log = { version = "0.4.22", features = ["kv"] }
redis = { version = "0.27.5", optional = true }
bb8-redis = { version = "0.17.0", optional = true }
papaya = "0.1.4"

[dev-dependencies]
lazy_static = "1.4.0"
